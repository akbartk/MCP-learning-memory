version: '3.9'

services:
  # Redis - Cache Layer (Simplified for testing)
  redis:
    image: redis:7-alpine
    container_name: mcp-redis-test
    ports:
      - "6382:6379"
    volumes:
      - ./docker/volumes/test/redis:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - mcp-test-network

  # ScyllaDB - Primary Storage (Single node for testing)
  scylladb:
    image: scylladb/scylla:5.2
    container_name: mcp-scylladb-test
    ports:
      - "9044:9042"
    volumes:
      - ./docker/volumes/test/scylladb:/var/lib/scylla
    command: --smp 1 --memory 1G --overprovisioned 1 --developer-mode 1
    healthcheck:
      test: ["CMD-SHELL", "cqlsh -e 'SELECT now() FROM system.local'"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - mcp-test-network

  # Elasticsearch - Semantic Search (Single node)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    container_name: mcp-elasticsearch-test
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - cluster.name=mcp-test
    ports:
      - "9202:9200"
    volumes:
      - ./docker/volumes/test/elasticsearch:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - mcp-test-network

networks:
  mcp-test-network:
    driver: bridge

# Volumes tidak diperlukan karena menggunakan bind mounts
# Data akan disimpan di ./docker/volumes/test/[service]